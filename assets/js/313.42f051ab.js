(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{220:function(t,e,v){"use strict";v.r(e);var a=v(0),_=Object(a.a)({},function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"wxmp-mpvue-最佳实践"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#wxmp-mpvue-最佳实践","aria-hidden":"true"}},[t._v("#")]),t._v(" wxmp mpvue 最佳实践")]),t._v(" "),v("p",[t._v("http://mpvue.com/mpvue/#vue_1")]),t._v(" "),v("h2",{attrs:{id:"最佳实践"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践","aria-hidden":"true"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),v("p",[v("strong",[t._v("1. 精简 data 数据")])]),t._v(" "),v("p",[t._v("冗余数据不要挂在 data 里，所有在 data/props/computed 中的数据，每次变更都会从微信小程序的 JSCore 进程，通过 setData 序列化成字符串后发送到 JSRender 进程。所以，如果你的数据量巨大的时候，会导致页面非常卡顿。")]),t._v(" "),v("p",[v("strong",[t._v("2. 优化长列表性能")])]),t._v(" "),v("p",[t._v("一般情况下这种页面会有大量的数据，除了遵从上面的建议外还有额外的建议。")]),t._v(" "),v("ul",[v("li",[t._v("避免在 v-for 中嵌套子组件，这样可以优化大部分部分 setData 时的冗余数据。")]),t._v(" "),v("li",[t._v("通过实践发现 wx:if 和 hidden 的优化肉眼不可见，所以或许可以试试直接通过样式 display 来展示和隐藏。")]),t._v(" "),v("li",[t._v("如果列表过长，强烈建议产品思考更好的展示形态。比如只展示热门，多余的折叠等形式。")])]),t._v(" "),v("blockquote",[v("p",[t._v("注：我们对其进行了专门优化，最佳实践时和原生小程序代码的性能相差无几。")])]),t._v(" "),v("p",[v("strong",[t._v("3. 合理使用双向绑定")]),t._v(" "),v("code",[t._v("mpvue")]),t._v(" 建议使用 "),v("code",[t._v("v-model.lazy")]),t._v(" 绑定方式以优化性能，此外 "),v("code",[t._v("v-model")]),t._v(" 在老基础库下输入框输入时可能存在光标重设的问题。")]),t._v(" "),v("p",[v("strong",[t._v("4. 谨慎选择直接使用小程序的 API")]),t._v(" 如果你有小程序和H5复用代码的需要，业务代码需要保持对 WEB "),v("code",[t._v("Vue.js")]),t._v("的兼容性。此时我们不建议在代码中直接调用小程序API，更好的选择是通过桥接适配层屏蔽两端差异。")]),t._v(" "),v("h2",{attrs:{id:"_1px-2rpx"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1px-2rpx","aria-hidden":"true"}},[t._v("#")]),t._v(" 1px  = 2rpx")])])},[],!1,null,null,null);e.default=_.exports}}]);