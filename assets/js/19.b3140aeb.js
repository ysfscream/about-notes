(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{262:function(s,t,n){"use strict";n.r(t);var e=n(0),a=Object(e.a)({},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"zshrc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#zshrc","aria-hidden":"true"}},[s._v("#")]),s._v(" zshrc")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you come from bash you might have to change your $PATH.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# export PATH=$HOME/bin:/usr/local/bin:$PATH")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Path to your oh-my-zsh installation.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ZSH")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/Users/yushifan/.oh-my-zsh\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Set name of the theme to load. Optionally, if you set this to "random"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it'll load a random theme each time that oh-my-zsh is loaded.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ZSH_THEME")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"robbyrussell"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line to use case-sensitive completion.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# CASE_SENSITIVE="true"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line to use hyphen-insensitive completion. Case")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sensitive completion must be off. _ and - will be interchangeable.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# HYPHEN_INSENSITIVE="true"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line to disable bi-weekly auto-update checks.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# DISABLE_AUTO_UPDATE="true"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line to change how often to auto-update (in days).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# export UPDATE_ZSH_DAYS=13")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line to disable colors in ls.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# DISABLE_LS_COLORS="true"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line to disable auto-setting terminal title.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# DISABLE_AUTO_TITLE="true"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line to enable command auto-correction.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ENABLE_CORRECTION="true"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line to display red dots whilst waiting for completion.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# COMPLETION_WAITING_DOTS="true"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line if you want to disable marking untracked files")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# under VCS as dirty. This makes repository status check for large repositories")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# much, much faster.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# DISABLE_UNTRACKED_FILES_DIRTY="true"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line if you want to change the command execution time")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stamp shown in the history command output.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# HIST_STAMPS="mm/dd/yyyy"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Would you like to use another custom folder than $ZSH/custom?")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ZSH_CUSTOM=/path/to/new-custom-folder")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example format: plugins=(rails git textmate ruby lighthouse)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add wisely, as too many plugins slow down shell startup.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("plugins")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("git"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ZSH")]),s._v("/oh-my-zsh.sh\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# User configuration")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# export MANPATH="/usr/local/man:$MANPATH"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# You may need to manually set your language environment")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# export LANG=en_US.UTF-8")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Preferred editor for local and remote sessions")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if [[ -n $SSH_CONNECTION ]]; then")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   export EDITOR='vim'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# else")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   export EDITOR='mvim'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Compilation flags")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# export ARCHFLAGS="-arch x86_64"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ssh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# export SSH_KEY_PATH="~/.ssh/rsa_id"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set personal aliases, overriding those provided by oh-my-zsh libs,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# plugins, and themes. Aliases can be placed here, though oh-my-zsh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# users are encouraged to define aliases within the ZSH_CUSTOM folder.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a full list of active aliases, run `alias`.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example aliases")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# alias zshconfig="mate ~/.zshrc"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# alias ohmyzsh="mate ~/.oh-my-zsh"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NVM_DIR")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$/Users/yushifan/.nvm"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -s "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NVM_DIR")]),s._v('/nvm.sh"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NVM_DIR")]),s._v('/nvm.sh"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This loads nvm")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("HOMEBREW_NO_AUTO_UPDATE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/opt/sphinx-doc/bin:'),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v('"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("code")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VSCODE_CWD")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" -n -b "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.microsoft.VSCode"')]),s._v(" --args "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("ulimit")]),s._v(" -c unlimited\n")])])])])},[],!1,null,null,null);t.default=a.exports}}]);