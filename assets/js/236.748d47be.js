(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{397:function(a,s,t){"use strict";t.r(s);var e=t(0),n=Object(e.a)({},function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"mongodb-用户名密码登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-用户名密码登录","aria-hidden":"true"}},[a._v("#")]),a._v(" MongoDB 用户名密码登录")]),a._v(" "),t("p",[a._v("https://www.jianshu.com/p/79caa1cc49a5")]),a._v(" "),t("p",[a._v("MongoDB 默认直接连接，无须身份验证，如果当前机器可以公网访问，且不注意Mongodb 端口（默认 27017）的开放状态，那么Mongodb就会产生安全风险，被利用此配置漏洞，入侵数据库。")]),a._v(" "),t("h1",{attrs:{id:"容易遭受入侵的环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容易遭受入侵的环境","aria-hidden":"true"}},[a._v("#")]),a._v(" 容易遭受入侵的环境")]),a._v(" "),t("ul",[t("li",[a._v("使用默认 mongod 命令启动 Mongodb")]),a._v(" "),t("li",[a._v("机器可以被公网访问")]),a._v(" "),t("li",[a._v("在公网上开放了 Mongodb 端口")])]),a._v(" "),t("h1",{attrs:{id:"安全风险"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安全风险","aria-hidden":"true"}},[a._v("#")]),a._v(" 安全风险")]),a._v(" "),t("ul",[t("li",[a._v("数据库隐私泄露")]),a._v(" "),t("li",[a._v("数据库被清空")]),a._v(" "),t("li",[a._v("数据库运行缓慢")])]),a._v(" "),t("h1",{attrs:{id:"解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方案","aria-hidden":"true"}},[a._v("#")]),a._v(" 解决方案")]),a._v(" "),t("h2",{attrs:{id:"_1-禁止公网访问-mongodb-端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-禁止公网访问-mongodb-端口","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 禁止公网访问 Mongodb 端口")]),a._v(" "),t("h3",{attrs:{id:"_1-1-网络配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-网络配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.1 网络配置")]),a._v(" "),t("p",[a._v("由于网络配置因人而异，需要根据自己实际环境进行配置，不作冗述。大致可以从以下方面禁止。")]),a._v(" "),t("ul",[t("li",[a._v("在路由器中关闭端口转发")]),a._v(" "),t("li",[a._v("防火墙 iptables 禁止访问")])]),a._v(" "),t("h3",{attrs:{id:"_1-2-验证端口能否访问方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-验证端口能否访问方式","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.2 验证端口能否访问方式")]),a._v(" "),t("p",[a._v("在外网机器命令行中运行")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("telnet your.machine.open.ip 27017\n\n")])])]),t("h2",{attrs:{id:"_2-启用验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-启用验证","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 启用验证")]),a._v(" "),t("h3",{attrs:{id:"_2-1-创建用户管理员账户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-创建用户管理员账户","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1 创建用户管理员账户")]),a._v(" "),t("p",[a._v("当前数据库版本：Mongodb 3.4")]),a._v(" "),t("p",[a._v("使用 mongod 启动数据库\n新建终端")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mongod --port 27017 --dbpath /data/db1\n\n")])])]),t("p",[t("strong",[a._v("参数默认可以不加，若有自定义参数，才要加上，下同。")])]),a._v(" "),t("p",[a._v("另起一个终端，运行下列命令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('mongo --port 27017\n\nuse admin\n\ndb.createUser(\n  {\n    user: "adminUser",\n    pwd: "adminPass",\n    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]\n  }\n)\n\n')])])]),t("p",[a._v("管理员创建成功，现在拥有了用户管理员\n用户名：adminUser\n密码：adminPass\n然后，断开 mongodb 连接， 关闭数据库\n两个终端下 <C - c>")]),a._v(" "),t("h3",{attrs:{id:"_2-2-mongodb-用户验证登陆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-mongodb-用户验证登陆","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2 Mongodb 用户验证登陆")]),a._v(" "),t("p",[a._v("启动带访问控制的 Mongodb\n新建终端")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mongod --auth --port 27017 --dbpath /data/db1\n\n")])])]),t("p",[a._v("现在有两种方式进行用户身份的验证\n第一种 （类似 MySql）\n客户端连接时，指定用户名，密码，db名称")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('mongo --port 27017 -u "adminUser" -p "adminPass" --authenticationDatabase "admin"\n\n')])])]),t("p",[a._v("第二种\n客户端连接后，再进行验证")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('mongo --port 27017\n\nuse admin\ndb.auth("adminUser", "adminPass")\n\n// 输出 1 表示验证成功\n\n')])])]),t("h3",{attrs:{id:"_2-3-创建普通用户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-创建普通用户","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3 创建普通用户")]),a._v(" "),t("p",[a._v("过程类似创建管理员账户，只是 role 有所不同")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('use foo\n\ndb.createUser(\n  {\n    user: "simpleUser",\n    pwd: "simplePass",\n    roles: [ { role: "readWrite", db: "foo" },\n             { role: "read", db: "bar" } ]\n  }\n)\n\n')])])]),t("p",[a._v("现在我们有了一个普通用户\n用户名：simpleUser\n密码：simplePass\n权限：读写数据库 foo， 只读数据库 bar。")]),a._v(" "),t("p",[t("strong",[a._v("注意")]),a._v(" "),t("strong",[a._v("NOTE")]),a._v(" "),t("strong",[a._v("WARN")]),a._v(" "),t("code",[a._v("use foo")]),a._v("表示用户在 foo 库中创建，就一定要 foo 库验证身份，即用户的信息跟随随数据库。比如上述 simpleUser 虽然有 bar 库的读取权限，但是一定要先在 foo 库进行身份验证，直接访问会提示验证失败。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('use foo\ndb.auth("simpleUser", "simplePass")\n\nuse bar\nshow collections\n\n')])])]),t("p",[a._v("还有一点需要注意，如果 admin 库没有任何用户的话，即使在其他数据库中创建了用户，启用身份验证，默认的连接方式依然会有超级权限")]),a._v(" "),t("h3",{attrs:{id:"_2-4-内建角色"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-内建角色","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4 内建角色")]),a._v(" "),t("ul",[t("li",[a._v("Read：允许用户读取指定数据库")]),a._v(" "),t("li",[a._v("readWrite：允许用户读写指定数据库")]),a._v(" "),t("li",[a._v("dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile")]),a._v(" "),t("li",[a._v("userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户")]),a._v(" "),t("li",[a._v("clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。")]),a._v(" "),t("li",[a._v("readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限")]),a._v(" "),t("li",[a._v("readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限")]),a._v(" "),t("li",[a._v("userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限")]),a._v(" "),t("li",[a._v("dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。")]),a._v(" "),t("li",[a._v("root：只在admin数据库中可用。超级账号，超级权限")])]),a._v(" "),t("p",[a._v("#创建的数据库里需要有集合才能被保留")])])},[],!1,null,null,null);s.default=n.exports}}]);